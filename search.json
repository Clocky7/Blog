[{"title":"关于第一次接触博客","url":"/post/6c390488/","content":"\n\n\n&emsp;&emsp;怎么说呢，我身边有很多人很早就踏入了外网、博客的圈子里，有的甚至在初中就有了自己日常更新的习惯。他们都是很厉害的人，而我只是个刚刚观测到冰山一角的萌新。代码、技术、生活，blog就是记录这些事情的存在，但我不是天才。对代码生疏，对技术不熟悉，只怀着一颗希望探索未知的心……\n&emsp;&emsp;自此，一条充满神秘与乐趣的路已经摆在我的身前。生活，新发现，新思路都会在这里的blog中记录，我热爱生活、憧憬未来，我会坚持下去。希望能在未来的某天成为一束光，照进身边每个人的世界————\n学习博客的原因\n&emsp;&emsp;本人是一名资深Arknights玩家，近期偶然得知出现了Arknights的blog主题，在朋友的帮助下从github上学习并搭建了自己的博客。身为计算机学院的学生，却对外网与代码了解甚少，着实是一个槽点。见多了形形色色有个性的博客，也想试试搭建属于自己的东西，也想在写博客的过程中见识到更多有意思的事。\n自己搭建时遇到的问题&emsp;&emsp;当我们所编辑的MD文件中所粘贴的图片有两种类型，一种是本地图片，另一种是在线图片，如果我们需要将我们所编辑的文本上传到博客时，本地图片会出现丢失，只出现本地格式路径。&emsp;&emsp;建议：&emsp;&emsp;外链图片转存失败,源站可能有防盗链机制,建议将图片保存至本地直接上传\n自言自语$ 其实忘了没啥想说的~~~","categories":["日常"],"tags":["有感而发"]},{"title":"python基础变量（字符串、数字）","url":"/post/40fa0d1d/","content":"一.字符串常用方法下面是一些基本的字符串操作函数(简称字串串的常用API)，用于日常工作：\n#把字符串转为小写lower() str = &quot;Clocky&quot;str_proves = str.lower()print(str_proves) #把字符串转为大写upper() str = &quot;Clocky&quot;str_proves = str.upper()print(str_proves) #把字符串首字母转为大写()capitalize()str = &quot;clocky is a good man&quot;str_proves = str.capitalize()print(str_proves) #把字符串每个子字符串首字母转为大写title()str = &quot;clocky&quot;str_proves = str.title()print(str_proves) #移除字符串两端空白strip(),其中在其前加left、right可以只删除一端空白str = &quot;  clocky  &quot;str_proves = str.strip()print(str_proves) #将字符串拆分为列表,split(&quot;其中可选择分隔符，默认空格&quot;)str = &quot;clocky is?a good man&quot;str_proves = str.split(&quot;?&quot;)print(str_proves) #其中[]表示其中截取哪个位置开始的字符串。同时几个分隔符可以一起用str = &quot;clocky is?a good&amp; man&quot;str_proves = str.split(&quot;?&quot;)[1].split(&quot;&amp;&quot;)print(str_proves) #将列表中两个字符串连接为一个字符串join()str = [&quot;Clocky&quot;,&quot;is a good man&quot;]str_proves = &quot; &quot;.join(str)print(str_proves) #将字符串中字符串替换为另一个字符串replace()str = &quot;clocky is a good man&quot;str_proves = str.replace(&quot;clocky&quot;,&quot;Miko&quot;)print(str_proves) #查找字符串，返回第一次出现的位置find()，如果没找到返回-1str = &quot;clocky is a good man&quot;str_proves = str.find(&quot;a&quot;)print(str_proves) #检查字符串是否以某个字符串开头startswith()str = &quot;clocky is a good man&quot;str_proves = str.startswith(&quot;clocky&quot;)print(str_proves) #检查字符串是否以某个字符串结尾endwith()str = &quot;clocky is a good man&quot;str_proves = str.endswith(&quot;man&quot;)print(str_proves) #检查字符串是否只有数字字符isdigit()str = &quot;clocky7&quot;str1 = &quot;7&quot;print(str.isdigit())print(str1.isdigit()) #检查字符串是否只有字母字符isalpha()str = &quot;clocky7&quot;str1 = &quot;c&quot;print(str.isalpha())print(str1.isalpha()) #检查字符串是否只有字母和数字字符isalnum()str = &quot;clocky7&quot;str1 = &quot;c&quot;print(str.isalnum())print(str1.isalnum()) #检查字符串中某个字符串出现次数count()str = &quot;clocky is a good man，whom is a student&quot;str_proves = str.count(&quot;is&quot;)print(str_proves) #老式字符串格式化format()str = &quot;clocky is &#123;&#125; good man，whom &#123;&#125; a student&quot;num = &quot;a&quot;xiyu = &quot;is&quot;str_proves = str.format(num,xiyu)print(str_proves)   \n\n结果：\nclocky\nCLOCKY\nClocky is a good man\nClocky\nclocky\n[&#39;clocky is&#39;, &#39;a good man&#39;]\n[&#39;a good&#39;, &#39; man&#39;]\nClocky is a good man\nMiko is a good man\n10\nTrue\nTrue\nFalse\nTrue\nFalse\nTrue\nTrue\nTrue\n2\nclocky is a good man，whom is a student\n\n二.数字变量2.1 进制十进制直接表示；二进制0b表示；八进制0o表示；十六进制0x表示。\n#注：其中10为测试数字,根据各种进制转换为十进制数 #十进制num = 10print(num) #八进制num = 0o10print(num) #十六进制num = 0x10print(num) #二进制num = 0b10print(num)\n\n结果：\n108162\n总结：&emsp;&emsp;也就是说是多少进制就是一轮有多少个数，例如10进制09共10个数，八进制07共8个数，一轮所有数走完后就进1.\n2.2 浮点数实际上浮点数有多种不同的表示方法，最复杂的科学计数法是”假设Xe+y,X为原数，e+y则表示10的y次方，原式的结果就是将两者相乘”。下面就是具体的例子：\n#不同的表示方法 num = 10.print(num) num1 = 10.0print(num1) num2 = .9print(num2) #科学计数法num3 = 1.52e-3print(num3)\n\n结果：\n10.0  \n10.0  \n0.9  \n0.00152\n\n2.3 布尔类型· 布尔只有两个值：True、False\n· 而数字中除了0其余皆为True\n· 还有个需要注意的地方，空字符串为False，但空格字符串为True\n· 用bool（）将其转化为布尔值\nprint(bool(1))print(bool(0))\n\n结果：\nTrue  \nFalse\n\n2.4 数字类型转换·bin()是将数字转换为二进制·oct()是将数字转换为八进制·hex()是将数字转换为十六进制·float()是将数字转换为浮点数·complex()是将数字转换为复数·int()是将数字转换为整数\n#二进制 num = 6print(bin(num)) #八进制 num = 6print(oct(num)) #十六进制num = 6print(hex(num)) #浮点数num = 6print(float(num)) #复数num = 6print(complex(num)) #合成复数，将前一个作为实部，后一个作为虚部num = 6num1 = 2print(complex(num, num1)) #十进制整数,只保留整数num = 6.9print(int(num))\n结果：\n0b110  \n0o6  \n0x6  \n6.0  \n(6+0j)  \n(6+2j)  \n6\n\n2.5 四舍六入，五看齐，奇变偶不变（规则）这里的意思是，在这种规则下，小数点后面的数，如果小于5，则舍弃，如果大于5，则进位。  \n如果等于5，那么看整数是奇是偶：\n是奇数则进位；  \n是偶数则舍弃。\n三.字节串字节串通过在字符串前加上 $b$ 来表示，其整个数据类型为bytes。\na = b&quot;hello&quot;print(a)print(type(a))\n\n结果：\nb&#39;hello&#39;  \n&lt;class &#39;bytes&#39;&gt;\n\n四.空值空值为None，其类型为NoneType(注：print（）本体也为空值)。举个简单的例子：\na = Noneprint(a)print(type(a)) b = print()print(b)\n\n结果：\nNone  \n&lt;class &#39;NoneType&#39;&gt;  \nNone\n\n","categories":["培训"],"tags":["基础"]},{"title":"如今到大三的一些感悟","url":"/post/1d35813b/","content":"\n&emsp;&emsp;从高中三年走到大学三年，不知不觉已经过去这么长一段时间了。感觉时间过的很快，从小学开始，下一个学习阶段都会变得更快，到了大学三年的时间只有小学一年的样子，很难想象小学的时候会过的那么充实。本人学习阶段横跨三省，因为父母工作的原因，小时候周转与河南、四川和浙江。浙江小学六年是记忆最深刻的日子，那时成绩不错，也是最快乐的时候。&emsp;&emsp;我还记得当年最流行的游戏，枪神纪、生死狙击、qq飞车，甚至玩到今天的Minecraft也是在那时候启蒙的。大城市的孩子，没有乡下孩子玩的那么纯真那么有意思，但小伙伴们都喜欢带我去废弃工地的池塘里夹螃蟹、捉蝌蚪，穿溜冰鞋，滑滑板，骑自行车，也一起约着绕城。我们那几个熟的都喜欢跑到别人家玩，家长们也都很开心。\n\n&emsp;&emsp;但人总会随着时间长大。\n&emsp;&emsp;从六年级下册来到四川后，这里改变了我很多。时间很紧，生活很急，老师盯着你，如果处理不当，学习也会压迫你。尽管最后修得成果，但已经没有从前的自由和天真。高中曾经谈过一场不合时宜的早恋，最后以不和而终。这一场梦给我的家庭带来了极大的影响，我的妈妈常常心疼我，我爸总说我已经做到了这个年纪不该承担的责任。总而言之，你不该看起来比父母更沧桑，爸妈永远站在你身后。\n\n&emsp;&emsp;关于我的父母，我很骄傲的告诉各位，他们是全天下最好的父母。\n&emsp;&emsp;他们自我出生起就没有对我动过粗，他们尽自己的努力用我能接受的方式来教育我。没有生活里的说教，不像社会上的很多父母，眼里似乎只有你的学习，和学校一起压垮一个孩子，口口声声都是为你好。我的父母一直让我们兄弟俩去做自己喜欢的事，无论是什么，只要想做，那就去做吧，享受一切。爸说，他们不能永远在你身边，人总会找到属于自己的人生，将来或许会走得很远，但”爸妈永远是你的后盾，你永远是爸妈的孩子，无论遇到什么事，我和你老妈都会努力，哈哈哈。”我从未感受到束缚，去做了很多我想做的事，也从不后悔。哪怕是当时那场早恋，留下过那么多遗憾，给我的家人带来那么多影响，他们只希望我能做自己，而我从中学会了很多为人处世的道理，也看清了很多事。\n&emsp;&emsp;得益于我所经历的一切，笔者认为每个人的人生都各有精彩。迄今为止发生的事，每一件都有其意义，它组成了现在的你，也会是你的未来。不是每个人都应该去做领导、做天才，大家都有自己喜欢的事，只要到最后你都尽力过，坦然接受自己，那么人生的这道坎也就过了。无论走向哪里，都无关紧要，世界很大，就是因为存在形形色色的人才会有绚烂的文明。  \n&emsp;&emsp;最后也希望我能完成自己的梦想：成为一束自由的光，能够在不经意间走进你的世界，为你的世界带来更多温暖与快乐。\n","categories":["日常"],"tags":["有感而发"]},{"title":"大学开始的第一次培训课程","url":"/post/148b0ced/","content":"环境的配置conda的安装&emsp;&emsp;敲代码的都知道学计算机都要会装环境，往前从来都是班级的大佬带着安装，这次尝试着自己安装。\n&emsp;&emsp;Anaconda直接在其官方链接Anaconda上下载即可，安装完成后如下图：\n\n配置环境变量&emsp;&emsp;Anaconda安装完成后，先找到其安装路径，如下图流程：\n\n\n&emsp;&emsp;随后往上滑找到condabin文件夹，进行下面的操作：\n  \n&emsp;&emsp;随后进入电脑的高级系统设置(在桌面右击”我的电脑”并点击”属性”即可)&emsp;&emsp;在”高级系统设置”中点击”环境变量”，在”系统变量”中找到Path，点击新建，随后将找到的condabin文件夹路径粘贴进去，如下图：\n\n简单的conda命令使用&emsp;&emsp;一.首先进行conda的激活，在电脑任意文件夹路径栏里键入cmd进入终端界面，输入conda activate，如果出现如下图所示，则表示conda已经激活成功。\n\n&emsp;&emsp;二.键入conda help可以查看conda的基本命令，此处采用 “conda create -n 你命的环境名 python&#x3D;&#x3D;你要下的版本” 创建一个虚拟环境。\n\n&emsp;&emsp;三.输入conda env list查看已创建环境的位置。\n使用代码编辑器配置环境（vscode为例）\npython基础关于注释&emsp;&emsp;在python中，使用#表示单行注释，使用’’’表示多行注释。因为很多时候注释较长，使用’’’可以换行来写，方便编写时审阅。\n&#x27;&#x27;&#x27;nnnnihao666&#x27;&#x27;&#x27;\n\n关于输入输出&emsp;&emsp;在python中，使用print()函数来输出内容，使用input()函数来输入内容。其中输出有两个重要的内容，一个是sep，一个是end.\n&emsp;&emsp;·sep 参数用来定义数据之间的分割符，默认为空格\n&emsp;&emsp;·end 参数用来定义数据输出完后用什么字符结束，默认是换行符(‘\\n’)\n&emsp;&emsp;下面是关于两个参数的测试代码：\n# 这是输出方面的测试代码print(123, 132, 213,sep=&#x27; &#x27;, end=&#x27;\\n&#x27;)print(&quot;hello world!&quot;)print(&quot;我们班有多少人&quot;, 12)print(1, 2, 3, 4)print(1, 2, 3, 4, sep=&quot; &quot;, end=&quot;\\n&quot;)print(1, 2, 3, 4, sep=&quot;-&quot;, end=&quot;hello&quot;)print(345)# 这是输入方面的测试代码x = input(&quot;请输入任意一个数据&quot;)print(x)\n&emsp;&emsp;结果一测便知，实践永远是验证的最好方式。\n基础变量变量命名&emsp;&emsp;1.变量默认只能由包含数字、字母、下划线的字段命名&emsp;&emsp;（unicode可编码的字符都可命名，包括中文汉字）&emsp;&emsp;2.数字不能作为变量名的开头&emsp;&emsp;3.变量名不能是python官方设置的保留字（如and、or、if、while等）&emsp;&emsp;4.大写字母通常表示常量，即基本不变的数据\n赋值与取值1.两个变量不能进行同时赋值与取值\n  \n&emsp;&emsp;将其分别赋值则可以完成，原因是其中逗号不为逗号运算符，逗号运算符讲究先后顺序\n2.在这里有一个我认为比较难懂的地方，就是\n· a,b,c&#x3D;x1,x2,x3\n&emsp;&emsp;这个大过程是合适的，且同时进行。我的理解是若默认x1，x2，x3都有其值，等号右侧的式子会先进行x1，x2，x3的取值（同时），然后等号两侧均转换为元组，再按顺序由{角标02及x1x3}赋值给a，b，c。因此整个大过程是同时的。  \nx1 = 10x2 = 20x3 = 30b = 40a,b,c = x1,x2,bprint(a,b,c)\n\n&emsp;&emsp;最后的结果是 10 20 40，上面的代码则证明这一点，x1，x2，b会先进行同时取值，然后再依次赋值给a，b，c，所以最后b的值是20，c的值是40而非同时b的值20。\n字符串(1)空格和“空”也能是字符串  \n(2)r’c:\\Software\\code\\py\\hqyj\\n\\t\\3.8_2.ipynb’（开头的r表示里面所有的\\n,\\t之类的全是文字，不转义）  \n(3)”\\\\“ 表示反斜杠\n&emsp;&emsp;示例：\nprint(&quot;nihao\\t wode&quot;)print(&quot;nihao\\\\t wode&quot;)\n\n&emsp;&emsp;输出结果是：\nnihao    wode\nnihao\\t wode\n\n字符串合并&emsp;&emsp;两个字符串可以通过加号相连，同时如果两个字符串紧靠在一起也会自动合并，最后结果都是小米13。\n# 加号合并a = &#x27;小米&#x27;b = &#x27;13&#x27;print(a + b)# 紧靠合并c = &#x27;小米&#x27;&#x27;13&#x27;print(c)\n\n&emsp;&emsp;一个字符串可以用*乘数字来进行累乘，效果就是叠加三次的”小米”。\n# 乘号叠加a = &quot;小米&quot;d = a * 3print(d)\n\n切片&emsp;&emsp;可以通过下标找到一个字符串中固定位置的字符，也可以通过范围切片寻找一段字符串。\n# 切片或下标,其中为左闭右开e = &#x27;小米13pro&#x27;print(e[0])print(e[-2])print(e[-7:3])print(e[3:])# 切片加步长f = &#x27;明日方舟终末地&#x27; print(f[::2])   print(f[5:3:-1])\n\n&emsp;&emsp;结果是：\n小\nr\n小米1\n3pro\n明方终地\n末终\n\n注：这里还有一道经典笔试题\n# 经常笔试题g = input(&#x27;请输入一个字符串：&#x27;) print(g)print(g == g[::-1])\n\n&emsp;&emsp;这段代码可以判断输入的字符串是否是回文，依次类推可以实现其他更多类似回文的问题。\n判断子串&emsp;&emsp;用 a in b 即可知道a是否为b的字串，且返回布尔类型的值。\n字符串长度&emsp;&emsp;用 len()函数来获取。\n字符串格式化&emsp;&emsp;占位符可以有效格式化字符串，缺点是比较麻烦，下面是示例：\n# 占位符a = &#x27;我叫%s,今年%d岁&#x27;%(&#x27;clocky&#x27;,20)print(a)b = &#x27;一共%f元&#x27;%(100)# 保留两位小数c = &#x27;一共%.2f元&#x27;%(100)# 左对齐，占8位字符，保留3位小数d = &#x27;一共%8.3f元&#x27;%(100)print(b)print(c)print(d)# 科学计数法(1e+08就是1*10^8)e = &#x27;一共%g元&#x27;%(100000000)print(e)    \n\n&emsp;&emsp;结果是：\n我叫clocky,今年20岁\n一共100.000000元\n一共100.00元\n一共 100.000元\n一共1e+08元\n\n&emsp;&emsp;更好用的是f-string格式化，它以f开头，其中的表达式则用{}包起来，而且{}中可以用：进一步格式化，如{s:2f}就是把s的值保留两位小数。下面给个简单的例子：\n# 格式化字符串,f-stringa = 34b = 23c = 12print(f&quot;abc(&#123;a&#125;, &#123;b&#125;, &#123;c&#125;)&quot;)\n\n&emsp;&emsp;结果:\nabc(34, 23, 12)\n\n","categories":["培训"],"tags":["基础"]}]